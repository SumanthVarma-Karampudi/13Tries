#include <iostream>
#include <string>
using namespace std;
 
 
 bool search(TrieNode *parent, string word)
    {
        if (word.size() == 0)
            return parent->isTerminal;
        if (parent->children[word[0] - 'a'] != NULL)
            return search(parent->children[word[0] - 'a'], word.substr(1));
        else
            return false;
    }

    bool search(string word)
    {
        // Write your code here
        if (word.size() == 0)
            return false;
        return search(root, word);
    }
    



int main() {
    int choice;
    cin >> choice;
    Trie t;

    while (choice != -1) {
        string word;
        bool ans;
        switch (choice) {
            case 1:  // insert
                cin >> word;
                t.insertWord(word);
                break;
            case 2:  // search
                cin >> word;
                cout << (t.search(word) ? "true\n" : "false\n");
                break;
            default:
                return 0;
        }
        cin >> choice;
    }

    return 0;
}
